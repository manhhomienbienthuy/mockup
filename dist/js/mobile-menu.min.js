'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

define(['jquery'], function ($) {
    var MobileMenuExport = function () {
        function MobileMenuExport(menu) {
            _classCallCheck(this, MobileMenuExport);

            this.menu = $(menu);
            this.init();
        }

        _createClass(MobileMenuExport, [{
            key: 'init',
            value: function init() {
                var _this = this;

                this.menu.addClass('mobile-navigation');
                this.button = $('<div class="navigation-button"><a href="#"><i class="fa fa-bars"></i></a></div>');
                this.button.insertBefore(this.menu.parent());
                this.button.children('a').on('click', function (event) {
                    event.preventDefault();
                    _this.menu.toggleClass('active');
                    _this.button.toggleClass('active');
                });
            }
        }]);

        return MobileMenuExport;
    }();

    return new MobileMenuExport('header .navigation');
});