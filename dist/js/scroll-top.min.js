'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

define(['jquery'], function ($) {
    var ScrollTopExport = function () {
        function ScrollTopExport(window, body) {
            _classCallCheck(this, ScrollTopExport);

            this.body = $(body);
            this.window = $(window);
            this.offset = this.window.height() * 0.75;
            this.init();
        }

        _createClass(ScrollTopExport, [{
            key: 'init',
            value: function init() {
                var _this = this;

                this.button = $('<a href="#top" class="back-to-top"><i class="fa fa-chevron-up"></i></a>');
                this.body.append(this.button);

                this.window.scroll(function () {
                    if ($(window).scrollTop() > _this.offset) {
                        _this.button.fadeIn('medium');
                    } else {
                        _this.button.fadeOut('medium');
                    }
                });
            }
        }]);

        return ScrollTopExport;
    }();

    return new ScrollTopExport(window, 'body');
});